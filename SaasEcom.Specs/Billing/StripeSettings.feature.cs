// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:1.9.0.77
//      SpecFlow Generator Version:1.9.0.0
//      Runtime Version:4.0.30319.34014
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace SaasEcom.Specs.Billing
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "1.9.0.77")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("StripeSettings")]
    public partial class StripeSettingsFeature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "StripeSettings.feature"
#line hidden
        
        [NUnit.Framework.TestFixtureSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "StripeSettings", "", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.TestFixtureTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Stripe change account credentials in test")]
        [NUnit.Framework.CategoryAttribute("Admin")]
        [NUnit.Framework.CategoryAttribute("AdminSettings")]
        public virtual void StripeChangeAccountCredentialsInTest()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Stripe change account credentials in test", new string[] {
                        "Admin",
                        "AdminSettings"});
#line 5
this.ScenarioSetup(scenarioInfo);
#line 6
 testRunner.Given("I am logged in to the dashboard", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 7
 testRunner.And("I am in settings section", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "field",
                        "value"});
            table1.AddRow(new string[] {
                        "StripeAccount_StripeTestSecretApiKey",
                        "bdd_StripeTestSecretApiKey_test"});
            table1.AddRow(new string[] {
                        "StripeAccount_StripeTestPublicApiKey",
                        "bdd_StripeTestPublicApiKey_test"});
            table1.AddRow(new string[] {
                        "StripeAccount_StripeLiveSecretApiKey",
                        "bdd_StripeLiveSecretApiKey_test"});
            table1.AddRow(new string[] {
                        "StripeAccount_StripeLivePublicApiKey",
                        "bdd_StripeLivePublicApiKey_test"});
            table1.AddRow(new string[] {
                        "test",
                        "true"});
#line 8
 testRunner.When("I fill in the details for stripe", ((string)(null)), table1, "When ");
#line 15
 testRunner.And("I click on save", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 16
 testRunner.Then("The details are updated", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Stripe change account credentials in live")]
        [NUnit.Framework.CategoryAttribute("Admin")]
        [NUnit.Framework.CategoryAttribute("AdminSettings")]
        public virtual void StripeChangeAccountCredentialsInLive()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Stripe change account credentials in live", new string[] {
                        "Admin",
                        "AdminSettings"});
#line 20
this.ScenarioSetup(scenarioInfo);
#line 21
 testRunner.Given("I am logged in to the dashboard", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 22
 testRunner.And("I am in settings section", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table2 = new TechTalk.SpecFlow.Table(new string[] {
                        "field",
                        "value"});
            table2.AddRow(new string[] {
                        "StripeAccount_StripeTestSecretApiKey",
                        "bdd_StripeTestSecretApiKey_live"});
            table2.AddRow(new string[] {
                        "StripeAccount_StripeTestPublicApiKey",
                        "bdd_StripeTestPublicApiKey_live"});
            table2.AddRow(new string[] {
                        "StripeAccount_StripeLiveSecretApiKey",
                        "bdd_StripeLiveSecretApiKey_live"});
            table2.AddRow(new string[] {
                        "StripeAccount_StripeLivePublicApiKey",
                        "bdd_StripeLivePublicApiKey_live"});
            table2.AddRow(new string[] {
                        "live",
                        "true"});
#line 23
 testRunner.When("I fill in the details for stripe", ((string)(null)), table2, "When ");
#line 30
 testRunner.And("I click on save", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 31
 testRunner.Then("The details are updated", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
